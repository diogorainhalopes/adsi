<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ADSI Notes on</title><link>https://diogorainhalopes.github.io/adsi/</link><description>Recent content in ADSI Notes on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://diogorainhalopes.github.io/adsi/index.xml" rel="self" type="application/rss+xml"/><item><title>Index Lab Notes</title><link>https://diogorainhalopes.github.io/adsi/Labs/Index-Lab-Notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/adsi/Labs/Index-Lab-Notes/</guid><description> Lab 01 Introduction to SQL Server Management Studio Lab 02 Storage and file structure Lab 03 Indexing</description></item><item><title>Index Lecture Notes</title><link>https://diogorainhalopes.github.io/adsi/Lectures/Index-Lecture-Notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/adsi/Lectures/Index-Lecture-Notes/</guid><description> Lecture 2 Storage and file organization Lecture 3 Indexing Lecture 4 Query Processing Lecture 5 Query Optimization Lecture 6 Transactions and concurrency Lecture 7 Transactions and concurrency pt2 Lecture 8 Database Recovery Lecture 9 Database Tuning Lecture 10 Database Tuning (continued) Lecture 11 Database Tuning (conclusion)</description></item><item><title>Keyword-Concepts</title><link>https://diogorainhalopes.github.io/adsi/Other/Keyword-Concepts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/adsi/Other/Keyword-Concepts/</guid><description/></item><item><title>Lab 01 - Introduction to SQL Server Management Studio</title><link>https://diogorainhalopes.github.io/adsi/Labs/Lab-01-Introduction-to-SQL-Server-Management-Studio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/adsi/Labs/Lab-01-Introduction-to-SQL-Server-Management-Studio/</guid><description>Lab01
1 SETSTATISTICSIOON Causes SQL Server to display information about the amount of physical and logical IO activity generated by Transact-SQL statements.</description></item><item><title>Lab 02 - Storage and file structure</title><link>https://diogorainhalopes.github.io/adsi/Labs/Lab-02-Storage-and-file-structure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/adsi/Labs/Lab-02-Storage-and-file-structure/</guid><description>Lab02
.mdf files* Data files contain data and objects such as tables, indexes, stored procedures, and views. large file (in the AdventureWorks2019 DB Properties, this file has an unlimited MAXSIZE)</description></item><item><title>Lab 03 - Indexing</title><link>https://diogorainhalopes.github.io/adsi/Labs/Lab-03-Indexing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/adsi/Labs/Lab-03-Indexing/</guid><description>Lab03
Index Info 1 EXECsp_helpindex&amp;#39;Person.Person&amp;#39;; Lists any indexes on a table, including indexes created by defining unique or primary key constraints defined by a create table or alter table statement.</description></item><item><title>Lecture 10 - Tuning (continued)</title><link>https://diogorainhalopes.github.io/adsi/Lectures/Lecture-10-Database-Tuning-continued/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/adsi/Lectures/Lecture-10-Database-Tuning-continued/</guid><description>Slides
More Tuning Index Tuning Topics
Types of queries Index structure Clustered vs. non clustered indexes Covering/composite indexes Indexes on small tables Recommendations Types of Queries Point Query 1 2 3 SELECTnameFROMEmployeeWHEREssnum=8478: Multipoint Query (Index tuning is especially usefull to reduce disk accesses on non clusteres indexes) 1 2 3 SELECTnameFROMEmployeeWHEREdept=&amp;#39;Information Systems&amp;#39;; Range Query 1 2 3 4 SELECTnameFROMEmployeeWHEREsalary&amp;gt;=40000ANDsalary&amp;lt;60000; Prefix Match Query 1 2 3 SELECT*FROMEmployeeWHEREnameLIKE&amp;#39;Ke%&amp;#39;; Extremal Query (in a B+ Tree you would only need to follow the rightmost path) 1 2 3 SELECTnameFROMEmployeeWHEREsalary=(SELECTMAX(salary)FROMEmployee); Ordering Query 1 2 3 SELECT*FROMEmployeeORDERBYsalary; Grouping Query (using HASH if no index is available) 1 2 3 SELECTdept,AVG(salary)FROMEmployeeGROUPBYdept; Join Query (Prevent nested loops) 1 2 3 4 SELECTe1.</description></item><item><title>Lecture 11 - Tuning (conclusion)</title><link>https://diogorainhalopes.github.io/adsi/Lectures/Lecture-11-Database-Tuning-conclusion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/adsi/Lectures/Lecture-11-Database-Tuning-conclusion/</guid><description>Slides
MORE TUNING Hardware and OS tuning Threads Giving higher/lower priority to some transactions can backfire
may cause priority inversion example T1 (higher priority) waiting for lock from T3 (lower priority) T2 keeps running while T3 (and therefore T1) keep waiting &amp;ldquo;Best practice&amp;rdquo; all threads ahev the same priority</description></item><item><title>Lecture 2 - Storage and file organization</title><link>https://diogorainhalopes.github.io/adsi/Lectures/Lecture-2-Storage-and-file-organization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/adsi/Lectures/Lecture-2-Storage-and-file-organization/</guid><description>Slides
Storage and file organization Physical Storage Systems vs Logical Storage Systems Files and bytes vs in-memory Tables
Classification of Physical Storage Media Volatile storage: Loses contents when power is switched off (ex: RAM) Non-volatile storage: Contents persist even when power is switched off.</description></item><item><title>Lecture 3 - Indexing</title><link>https://diogorainhalopes.github.io/adsi/Lectures/Lecture-3-Indexing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/adsi/Lectures/Lecture-3-Indexing/</guid><description>Slides
Indexes &amp;ldquo;Indexes will be our friends&amp;rdquo; Main Indexes:
B+ - Tree Hash Indexes Example: The book has the table of contents - shoes topics in order (page numbe, you are advancing in the book sequencially); and the index at the end of the book (the page numbers is not order, in this case the index entries are sorted alfphabetically)</description></item><item><title>Lecture 4 - Query Processing</title><link>https://diogorainhalopes.github.io/adsi/Lectures/Lecture-4-Query-Processing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/adsi/Lectures/Lecture-4-Query-Processing/</guid><description>Slides
Query Processing Basic Steps in Query Processing Parsing and translation â€“ Translate the query into its internal form.</description></item><item><title>Lecture 5 - Query Optimization</title><link>https://diogorainhalopes.github.io/adsi/Lectures/Lecture-5-Query-Optimization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/adsi/Lectures/Lecture-5-Query-Optimization/</guid><description>Slides
Query Optimization Evaluating a given query Query optimization is finding the optimal execution plan
From a) to b) we change the plan because we only join the rows we want, which translates in a better performance becasue has smaller intermediate results</description></item><item><title>Lecture 6 - Transactions and concurrency</title><link>https://diogorainhalopes.github.io/adsi/Lectures/Lecture-6-Transactions-and-concurrency/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/adsi/Lectures/Lecture-6-Transactions-and-concurrency/</guid><description>Slides
&amp;ldquo;We want performance&amp;rdquo; Transaction Concept Unit of a program. Group of ops that are executed as a whole Maintain a consistent state in the system Inconsistent while inside de transaction Main issues Concurrent execution of multiple transactions Failures of various kinds, such as hardware failures and system crashes Focus on READ and WRITE</description></item><item><title>Lecture 7 - Transactions and concurrency pt.2</title><link>https://diogorainhalopes.github.io/adsi/Lectures/Lecture-7-Transactions-and-concurrency-pt2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/adsi/Lectures/Lecture-7-Transactions-and-concurrency-pt2/</guid><description>Slides
Locks and Time Tree Protocol Only exclusive locks are considered. The first lock may be on any data item.</description></item><item><title>Lecture 8 - Database Recovery</title><link>https://diogorainhalopes.github.io/adsi/Lectures/Lecture-8-Database-Recovery/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/adsi/Lectures/Lecture-8-Database-Recovery/</guid><description>Slides
Database Crash and Recovery System Failure Classification Transaction failure Logical errors &amp;ldquo;not enough money to transfer&amp;rdquo; transaction cannot complete due to some internal error condition System errors the database system must terminate an active transaction due to an error condition ( e.</description></item><item><title>Lecture 9 - Tuning</title><link>https://diogorainhalopes.github.io/adsi/Lectures/Lecture-9-Database-Tuning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/adsi/Lectures/Lecture-9-Database-Tuning/</guid><description>Slides
Tuning &amp;ldquo;All about performance&amp;rdquo; What Faster = higher throughput, or lower response time Avoid bottlenecks 5% is a lot Why Troubleshooting Capacity Sizing Application Programming Causes of bad performance may have to do with disk size, log system, locks&amp;hellip;</description></item><item><title>Useful Transact-SQL</title><link>https://diogorainhalopes.github.io/adsi/Other/Useful-Transact-SQL/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/adsi/Other/Useful-Transact-SQL/</guid><description>1 SETSTATISTICSIOON Causes SQL Server to display information about the amount of physical and logical IO activity generated by Transact-SQL statements.</description></item></channel></rss>