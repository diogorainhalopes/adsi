<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ADSI Notes on</title><link>https://diogorainhalopes.github.io/quartz/</link><description>Recent content in ADSI Notes on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://diogorainhalopes.github.io/quartz/index.xml" rel="self" type="application/rss+xml"/><item><title>Setup</title><link>https://diogorainhalopes.github.io/quartz/notes/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/notes/setup/</guid><description>Making your own Quartz Setting up Quartz requires a basic understanding of git. If you are unfamiliar, this resource is a great place to start!</description></item><item><title>Editing Content in Quartz</title><link>https://diogorainhalopes.github.io/quartz/notes/editing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/notes/editing/</guid><description>Editing Quartz runs on top of Hugo so all notes are written in Markdown.
Folder Structure Here&amp;rsquo;s a rough overview of what&amp;rsquo;s what.</description></item><item><title>Obsidian Vault Integration</title><link>https://diogorainhalopes.github.io/quartz/notes/obsidian/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/notes/obsidian/</guid><description>Setup Obsidian is the preferred way to use Quartz. You can either create a new Obsidian Vault or link one that your already have.</description></item><item><title>Preview Changes</title><link>https://diogorainhalopes.github.io/quartz/notes/preview-changes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/notes/preview-changes/</guid><description>If you&amp;rsquo;d like to preview what your Quartz site looks like before deploying it to the internet, the following instructions guide you through installing the proper dependencies to run it locally.</description></item><item><title>Deploying Quartz to the Web</title><link>https://diogorainhalopes.github.io/quartz/notes/hosting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/notes/hosting/</guid><description>Hosting on GitHub Pages Quartz is designed to be effortless to deploy. If you forked and cloned Quartz directly from the repository, everything should already be good to go!</description></item><item><title>Callouts</title><link>https://diogorainhalopes.github.io/quartz/notes/callouts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/notes/callouts/</guid><description>Callout support Quartz supports the same Admonition-callout syntax as Obsidian.
This includes
12 Distinct callout types (each with several aliases) Collapsable callouts See documentation on supported types and syntax here.</description></item><item><title>CJK + Latex Support (测试)</title><link>https://diogorainhalopes.github.io/quartz/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95/</guid><description>Chinese, Japanese, Korean Support 几乎在我们意识到之前，我们已经离开了地面。
우리가 그것을 알기도 전에 우리는 땅을 떠났습니다.
私たちがそれを知るほぼ前に、私たちは地面を離れていました。
Latex Block math works with two dollar signs $$.</description></item><item><title>Configuration</title><link>https://diogorainhalopes.github.io/quartz/notes/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/notes/config/</guid><description>Configuration Quartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you&amp;rsquo;d like to get.</description></item><item><title>Custom Domain</title><link>https://diogorainhalopes.github.io/quartz/notes/custom-Domain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/notes/custom-Domain/</guid><description>Registrar This step is only applicable if you are using a custom domain! If you are using a &amp;lt;YOUR-USERNAME&amp;gt;.github.io domain, you can skip this step.</description></item><item><title>Hosting with Docker</title><link>https://diogorainhalopes.github.io/quartz/notes/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/notes/docker/</guid><description>If you want to host Quartz on a machine without using a webpage hosting service, it may be easier to install Docker Compose and follow the instructions below than to install Quartz&amp;rsquo;s dependencies manually.</description></item><item><title>Ignoring Notes</title><link>https://diogorainhalopes.github.io/quartz/notes/ignore-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/notes/ignore-notes/</guid><description>Quartz Ignore Edit ignoreFiles in config.toml to include paths you&amp;rsquo;d like to exclude from being rendered.
1 2 3 4 5 6 .</description></item><item><title>Index Lab Notes</title><link>https://diogorainhalopes.github.io/quartz/Labs/Index-Lab-Notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/Labs/Index-Lab-Notes/</guid><description> [[Labs/Lab-01-Introduction-to-SQL-Server-Management-Studio]] [[Labs/Lab-02-Storage-and-file-structure]] [[Labs/Lab-03-Indexing]]</description></item><item><title>Index Lecture Notes</title><link>https://diogorainhalopes.github.io/quartz/Lectures/Index-Lecture-Notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/Lectures/Index-Lecture-Notes/</guid><description> [[Lectures/Lecture-2-Storage-and-file-organization]] [[Lectures/Lecture-3-Indexing]] [[Lectures/Lecture-4-Query-Processing]] [[Lectures/Lecture-5-Query-Optimization]] [[Lectures/Lecture-6-Transactions-and-concurrency]] [[Lectures/Lecture-7-Transactions-and-concurrency-pt.2]]</description></item><item><title>Lab 01 - Introduction to SQL Server Management Studio</title><link>https://diogorainhalopes.github.io/quartz/Labs/Lab-01-Introduction-to-SQL-Server-Management-Studio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/Labs/Lab-01-Introduction-to-SQL-Server-Management-Studio/</guid><description>[[guides/Lab01.pdf|Lab 01]] 1 SETSTATISTICSIOON Causes SQL Server to display information about the amount of physical and logical IO activity generated by Transact-SQL statements.</description></item><item><title>Lab 02 - Storage and file structure</title><link>https://diogorainhalopes.github.io/quartz/Labs/Lab-02-Storage-and-file-structure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/Labs/Lab-02-Storage-and-file-structure/</guid><description>[[guides/Lab02.pdf|Lab 02]] .mdf files* Data files contain data and objects such as tables, indexes, stored procedures, and views. large file (in the AdventureWorks2019 DB Properties, this file has an unlimited MAXSIZE)</description></item><item><title>Lab 03 - Indexing</title><link>https://diogorainhalopes.github.io/quartz/Labs/Lab-03-Indexing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/Labs/Lab-03-Indexing/</guid><description>[[guides/Lab03.pdf|Lab 03]] Index Info 1 EXECsp_helpindex&amp;#39;Person.Person&amp;#39;; Lists any indexes on a table, including indexes created by defining unique or primary key constraints defined by a create table or alter table statement.</description></item><item><title>Lecture 2 - Storage and file organization</title><link>https://diogorainhalopes.github.io/quartz/Lectures/Lecture-2-Storage-and-file-organization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/Lectures/Lecture-2-Storage-and-file-organization/</guid><description>[[slides/adsi-02-storage.pdf| Lecture 2 slides]]
Physical Storage Systems vs Logical Storage Systems Files and bytes vs in-memory Tables
Classification of Physical Storage Media Volatile storage: Loses contents when power is switched off (ex: RAM) Non-volatile storage: Contents persist even when power is switched off.</description></item><item><title>Lecture 3 - Indexing</title><link>https://diogorainhalopes.github.io/quartz/Lectures/Lecture-3-Indexing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/Lectures/Lecture-3-Indexing/</guid><description>[[slides/adsi-03-indexing.pdf|Lecture 3 slides]]
&amp;ldquo;Indexes will be our friends&amp;rdquo; Main Indexes:
B+ - Tree Hash Indexes Example: The book has the table of contents - shoes topics in order (page numbe, you are advancing in the book sequencially); and the index at the end of the book (the page numbers is not order, in this case the index entries are sorted alfphabetically)</description></item><item><title>Lecture 4 - Query Processing</title><link>https://diogorainhalopes.github.io/quartz/Lectures/Lecture-4-Query-Processing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/Lectures/Lecture-4-Query-Processing/</guid><description>[[slides/adsi-04-processing.pdf|Lecture 4 slides]]
Basic Steps in Query Processing Parsing and translation – Translate the query into its internal form. This is then translated into relational algebra.</description></item><item><title>Lecture 5 - Query Optimization</title><link>https://diogorainhalopes.github.io/quartz/Lectures/Lecture-5-Query-Optimization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/Lectures/Lecture-5-Query-Optimization/</guid><description>[[slides/adsi-05-optimization.pdf|Lecture 5 slides]]
Evaluating a given query Query optimization is finding the optimal execution plan
From a) to b) we change the plan because we only join the rows we want, which translates in a better performance becasue has smaller intermediate results</description></item><item><title>Lecture 6 - Transactions and concurrency</title><link>https://diogorainhalopes.github.io/quartz/Lectures/Lecture-6-Transactions-and-concurrency/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/Lectures/Lecture-6-Transactions-and-concurrency/</guid><description>[[slides/adsi-06-transactions.pdf|Lecture 6 - slides]]
&amp;ldquo;We want performance&amp;rdquo; Transaction Concept Unit of a program. Group of ops that are executed as a whole Maintain a consistent state in the system Inconsistent while inside de transaction Main issues Concurrent execution of multiple transactions Failures of various kinds, such as hardware failures and system crashes Focus on READ and WRITE</description></item><item><title>Lecture 7 - Transactions and concurrency pt.2</title><link>https://diogorainhalopes.github.io/quartz/Lectures/Lecture-7-Transactions-and-concurrency-pt.2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/Lectures/Lecture-7-Transactions-and-concurrency-pt.2/</guid><description>[[slides/adsi-06-transactions.pdf/|Lecture 7 - slides]]
Tree Protocol Only exclusive locks are considered. The first lock may be on any data item.</description></item><item><title>Quartz Philosophy</title><link>https://diogorainhalopes.github.io/quartz/notes/philosophy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/notes/philosophy/</guid><description>“[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.</description></item><item><title>Search</title><link>https://diogorainhalopes.github.io/quartz/notes/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/notes/search/</guid><description>Quartz supports two modes of searching through content.
Full-text Full-text search is the default in Quartz. It produces results that exactly match the search query.</description></item><item><title>Showcase</title><link>https://diogorainhalopes.github.io/quartz/notes/showcase/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/notes/showcase/</guid><description>Want to see what Quartz can do? Here are some cool community gardens :)
Quartz Documentation (this site!) Jacky Zhao&amp;rsquo;s Garden Scaling Synthesis - A hypertext research notebook AWAGMI Intern Notes Shihyu&amp;rsquo;s PKM SlRvb&amp;rsquo;s Site Course notes for Information Technology Advanced Theory Brandon Boswell&amp;rsquo;s Garden Siyang&amp;rsquo;s Courtyard Data Dictionary 🧠 sspaeti.</description></item><item><title>Troubleshooting and FAQ</title><link>https://diogorainhalopes.github.io/quartz/notes/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/notes/troubleshooting/</guid><description>Still having trouble? Here are a list of common questions and problems people encounter when installing Quartz.
While you&amp;rsquo;re here, join our Discord :)</description></item><item><title>Updating</title><link>https://diogorainhalopes.github.io/quartz/notes/updating/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://diogorainhalopes.github.io/quartz/notes/updating/</guid><description>Haven&amp;rsquo;t updated Quartz in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update!</description></item></channel></rss>